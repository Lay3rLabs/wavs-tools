version: "3"

includes:
  config:
    taskfile: ./config.yml
    flatten: true
  docker:
    taskfile: ./docker.yml
    flatten: true

tasks:
  wavs:
    desc: "Runs WAVS CLI commands"
    vars:
      WAVS_INSTANCE: "{{.WAVS_INSTANCE | default 1}}"
      WAVS_SUBMISSION_MNEMONIC:
        sh: task backend:get-wavs-submission-mnemonic-{{.WAVS_INSTANCE}}
    cmds:
      - >
        {{.DOCKER_SUDO}} docker run --rm --network host
        -e WAVS_SUBMISSION_MNEMONIC="{{.WAVS_SUBMISSION_MNEMONIC}}"
        -v {{.REPO_ROOT}}:/wavs-tools
        -v {{.WAVS_HOME_DIR}}:/wavs-home 
        {{.WAVS_DOCKER_IMAGE}}
        wavs-cli {{.CLI_ARGS}}

  fund-address:
    desc: "Check and fund address with 15 ETH if balance is < 1 ETH"
    vars:
      CURRENT_BALANCE:
        sh: cast balance --ether {{.ADDRESS}} --rpc-url {{.EVM_RPC_URL}}
    cmds:
      - |
        echo "ðŸ”Ž Checking balance for address: {{.ADDRESS}}"
        echo "Current balance: {{.CURRENT_BALANCE}} ETH"

        if (( $(echo "{{.CURRENT_BALANCE}} < 1.0" | bc -l) )); then
          echo "ðŸ’° Funding {{.ADDRESS}} with 15 ETH..."
          cast rpc anvil_setBalance "{{.ADDRESS}}" "15000000000000000000" --rpc-url {{.EVM_RPC_URL}} > /dev/null
          NEW_BALANCE=$(cast balance --ether {{.ADDRESS}} --rpc-url {{.EVM_RPC_URL}})
          echo "âœ… Funded. New balance: ${NEW_BALANCE} ETH"
        else
          echo "âœ… Address already has â‰¥ 1 ETH"
        fi
    requires:
      vars: [ADDRESS, EVM_RPC_URL]

  build-abi-ci:
    internal: true
    requires:
      vars: [BUILD_ABI]
    status:
      - '[ "{{.BUILD_ABI}}" != "true" ]'
    cmds:
      - task: build-eigenlayer-abi
      - task: build-wavs-abi

  build-abi:
    internal: true
    deps:
      - task: build-eigenlayer-abi
      - task: build-wavs-abi

  build-eigenlayer-abi:
    internal: true
    dir: "./submodules/eigenlayer-middleware"
    cmds:
      - mkdir -p {{.ABI_EIGENLAYER_MIDDLEWARE_DIR}}
      - forge build
      - for: ["ECDSAStakeRegistry.sol", "AllocationManager.sol"]
        cmd: cp -r "out/{{.ITEM}}" "{{.ABI_EIGENLAYER_MIDDLEWARE_DIR}}/"

  build-wavs-abi:
    internal: true
    dir: "./node_modules/@wavs/solidity/contracts"
    cmds:
      - mkdir -p {{.ABI_WAVS_MIDDLEWARE_DIR}}
      - forge build -C eigenlayer/ecdsa
      - for: ["IWavsServiceManager.sol"]
        cmd: cp -r "out/{{.ITEM}}" "{{.ABI_WAVS_MIDDLEWARE_DIR}}/"

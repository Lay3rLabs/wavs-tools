version: "3"

vars:
  REPO_ROOT:
    # find the root directory of the repository by looking for the `.git` directory.
    sh: |
      dir="$(pwd)"
      while [ "$dir" != "/" ]; do
        if [ -d "$dir/.git" ]; then
          echo "$dir"
          exit 0
        fi
        dir="$(dirname "$dir")"
      done
  WAVS_DOCKER_IMAGE: "ghcr.io/lay3rlabs/wavs:900f9fe"
  MIDDLEWARE_DOCKER_IMAGE: "ghcr.io/lay3rlabs/wavs-middleware:0.4.1"
  FOUNDRY_DOCKER_IMAGE: "ghcr.io/foundry-rs/foundry:latest"
  JAEGER_DOCKER_IMAGE: "jaegertracing/jaeger:2.5.0"
  PROMETHEUS_DOCKER_IMAGE: "prom/prometheus:v3.3.0"
  PROJECT_OUTPUT_DIRNAME: ".project-output"
  BACKEND_DIR: '{{joinPath .REPO_ROOT "backend"}}'
  ANVIL_FORK_CHAIN_ID: 31337
  ANVIL_HOLESKY_FORK_URL: "https://eth-holesky.g.alchemy.com/v2/Hr83A86i2pYH_ABCxFveDMBmKvhIo_Gi"
  ANVIL_BASE_PORT: 8548 # Base port for Anvil, subsequent ports will be incremented by 1 for each instance
  WAVS_BASE_PORT: 8123 # Base port for WAVS, subsequent ports will be incremented by 1 for each instance
  WAVS_AGGREGATOR_PORT: 8200
  WAVS_HOME_DIR: '{{joinPath .BACKEND_DIR "wavs-home"}}'
  WAVS_AGGREGATOR_ENDPOINT: "http://localhost:{{.WAVS_AGGREGATOR_PORT}}"
  MIDDLEWARE_DEPLOY_ENV: "LOCAL"
  MIDDLEWARE_CHAIN_ID: 17000
  MIDDLEWARE_METADATA_URI: "https://raw.githubusercontent.com/Lay3rLabs/wavs-foundry-template/refs/heads/main/metadata.json"
  MIDDLEWARE_LST_CONTRACT_ADDRESS: "0x3F1c547b21f65e10480dE3ad8E19fAAC46C95034"
  MIDDLEWARE_LST_STRATEGY_ADDRESS: "0x7D704507b76571a51d9caE8AdDAbBFd0ba0e63d3"
  COMPONENTS_CARGO_RELEASE_DIR: '{{joinPath .REPO_ROOT "target/wasm32-wasip1/release"}}'
  ABI_EIGENLAYER_MIDDLEWARE_DIR: '{{joinPath .REPO_ROOT "abi/eigenlayer-middleware"}}'
  ACTIVE_CHAIN_COUNT:
    sh: docker ps --filter "name=chain-anvil-" --format '{{"{{"}}.Names{{"}}"}}' | wc -l | xargs
  ACTIVE_WAVS_COUNT:
    sh: docker ps --filter "name=wavs-" --format '{{"{{"}}.Names{{"}}"}}' | grep -v '^wavs-aggregator$' | wc -l | xargs
  DOCKER_SUDO:
    sh: |
      if command -v docker >/dev/null 2>&1 && docker info >/dev/null 2>&1; then 
        echo ""
      else 
        echo "sudo"
      fi

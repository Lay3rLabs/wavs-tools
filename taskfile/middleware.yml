version: "3"

includes:
  config:
    taskfile: ./config.yml
    flatten: true
  docker:
    taskfile: ./docker.yml
    flatten: true
  backend: ./backend.yml
  eigen:ecdsa:
    taskfile: ./middleware/eigen/ecdsa.yml
  eigen:mock:
    taskfile: ./middleware/eigen/mock.yml
  eigen:mirror:
    taskfile: ./middleware/eigen/mirror.yml
  poa:
    taskfile: ./middleware/poa.yml

tasks:
  get-output-dir:
    desc: "Get the path to the middleware output directory"
    vars:
      CHAIN_NUMBER: "{{.CHAIN_NUMBER | default 1}}"
      CHAIN_DIRNAME: "chain-{{.CHAIN_NUMBER}}"
      OUTPUT_DIR: '{{joinPath .REPO_ROOT "projects" .PROJECT .PROJECT_OUTPUT_DIRNAME .CHAIN_DIRNAME .SERVICE_NAME}}'
    requires:
      vars: [PROJECT, SERVICE_NAME]
    cmds:
      - echo "{{.OUTPUT_DIR}}"

  get-json-filepath:
    desc: "Get the path to the middleware deploy JSON file"
    vars:
      CHAIN_NUMBER: "{{.CHAIN_NUMBER | default 1}}"
      CHAIN_DIRNAME: "chain-{{.CHAIN_NUMBER}}"
      DEPLOY_FILE: '{{.DEPLOY_FILE | default "avs_deploy.json"}}'
      OUTPUT_DIR:
        sh: task middleware:get-output-dir CHAIN_NUMBER={{.CHAIN_NUMBER}} PROJECT={{.PROJECT}} SERVICE_NAME={{.SERVICE_NAME}}
    requires:
      vars: [PROJECT, SERVICE_NAME]
    cmds:
      - echo "{{.OUTPUT_DIR}}/{{.DEPLOY_FILE}}"

  get-mirror-json-filepath:
    desc: "Get the path to the middleware mirror JSON file"
    vars:
      CHAIN_DIRNAME: "chain-{{.CHAIN_NUMBER}}"
      OUTPUT_DIR:
        sh: task middleware:get-output-dir CHAIN_NUMBER={{.CHAIN_NUMBER}} PROJECT={{.PROJECT}} SERVICE_NAME={{.SERVICE_NAME}}
    requires:
      vars: [PROJECT, SERVICE_NAME, CHAIN_NUMBER]
    cmds:
      - echo "{{.OUTPUT_DIR}}/mirror.json"

  get-service-manager-address:
    desc: "Get the WAVS Service Manager address from the middleware deploy JSON file"
    vars:
      CHAIN_NUMBER: "{{.CHAIN_NUMBER | default 1}}"
      MIDDLEWARE_MODE: '{{.MIDDLEWARE_MODE | default "EIGEN_ECDSA"}}'
      DEPLOY_FILE: "avs_deploy.json"
      JSON_FILEPATH:
        sh: task middleware:get-json-filepath CHAIN_NUMBER={{.CHAIN_NUMBER}} PROJECT={{.PROJECT}} SERVICE_NAME="{{.SERVICE_NAME}}" DEPLOY_FILE={{if eq .MIDDLEWARE_MODE "POA"}}poa_deploy.json{{else}}avs_deploy.json{{end}}
    requires:
      vars: [PROJECT, SERVICE_NAME]
    cmds:
      - |
        case "{{.MIDDLEWARE_MODE}}" in
          "POA")
            jq -r ".addresses.POAStakeRegistry" "{{.JSON_FILEPATH}}"
            ;;
          *)
            jq -r ".addresses.WavsServiceManager" "{{.JSON_FILEPATH}}"
            ;;
        esac

  get-stake-registry-address:
    desc: "Get the Stake Registry address from the middleware deploy JSON file"
    vars:
      CHAIN_NUMBER: "{{.CHAIN_NUMBER | default 1}}"
      MIDDLEWARE_MODE: '{{.MIDDLEWARE_MODE | default "EIGEN_ECDSA"}}'
      JSON_FILEPATH:
        sh: task middleware:get-json-filepath CHAIN_NUMBER={{.CHAIN_NUMBER}} PROJECT={{.PROJECT}} SERVICE_NAME={{.SERVICE_NAME}} DEPLOY_FILE={{if eq .MIDDLEWARE_MODE "POA"}}poa_deploy.json{{else}}avs_deploy.json{{end}}
    requires:
      vars: [PROJECT, SERVICE_NAME]
    cmds:
      - |
        case "{{.MIDDLEWARE_MODE}}" in
          "POA")
            jq -r ".addresses.POAStakeRegistry" "{{.JSON_FILEPATH}}"
            ;;
          *)
            jq -r ".addresses.stakeRegistry" "{{.JSON_FILEPATH}}"
            ;;
        esac

  get-mirror-stake-registry-address:
    desc: "Get the Mirror Stake Registry address from the middleware JSON file"
    vars:
      JSON_FILEPATH:
        sh: task middleware:get-mirror-json-filepath CHAIN_NUMBER={{.CHAIN_NUMBER}} PROJECT={{.PROJECT}} SERVICE_NAME={{.SERVICE_NAME}}
    requires:
      vars: [PROJECT, SERVICE_NAME, CHAIN_NUMBER]
    cmds:
      - jq -r ".addresses.stakeRegistry" "{{.JSON_FILEPATH}}"

  get-mirror-service-manager-address:
    desc: "Get the Mirror Service Manager address from the middleware JSON file"
    vars:
      JSON_FILEPATH:
        sh: task middleware:get-mirror-json-filepath CHAIN_NUMBER={{.CHAIN_NUMBER}} PROJECT={{.PROJECT}} SERVICE_NAME={{.SERVICE_NAME}}
    requires:
      vars: [PROJECT, SERVICE_NAME, CHAIN_NUMBER]
    cmds:
      - jq -r ".addresses.WavsServiceManager" "{{.JSON_FILEPATH}}"

  set-service-uri:
    desc: "Set the service URI on the service manager contract"
    vars:
      CHAIN_NUMBER: "{{.CHAIN_NUMBER | default 1}}"
      RPC_URL:
        sh: cd "{{.REPO_ROOT}}" && task backend:get-evm-rpc-url-{{.CHAIN_NUMBER}}
    requires:
      vars: [PROJECT, SERVICE_NAME, SERVICE_MANAGER_ADDRESS, SERVICE_URI]
    cmds:
      - |
        echo "Setting service URI on {{.SERVICE_MANAGER_ADDRESS}}"
        cast send "{{.SERVICE_MANAGER_ADDRESS}}" "setServiceURI(string)" "{{.SERVICE_URI}}" --private-key "{{.DEPLOYER_PRIVATE_KEY}}" --rpc-url "{{.RPC_URL}}"

  get-strategy-manager-address:
    desc: "Get the strategy manager address from the deployments JSON file"
    vars:
      CHAIN_ID: "{{.CHAIN_ID | default .MIDDLEWARE_CHAIN_ID}}"
    cmds:
      - jq -r ".addresses.strategyManager" "node_modules/@wavs/solidity/contracts/deployments/eigenlayer-core/{{.CHAIN_ID}}.json"

name: Tests
on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
  push:
    branches: [main]
  issue_comment:
    types: [created]

jobs:
  tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    if: >
      github.event_name == 'push' ||
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '!test-report'))

  
    steps:
      - name: Checkout (PR Comment)
        if: github.event_name == 'issue_comment'
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: refs/pull/${{ github.event.issue.number }}/head

      - name: Checkout (Push/PR)
        if: github.event_name != 'issue_comment'
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Cache Submodules
        id: cache-submodules
        uses: actions/cache@v4
        with:
          path: ./submodules/eigenlayer-middleware
          key: ${{ runner.os }}-submodules-${{ hashFiles('**/.gitmodules') }}-${{ hashFiles('submodules/**/.git') }}

      - name: Cache Forge Build Output
        id: cache-forge-build
        uses: actions/cache@v4
        with:
          path: |
            ./submodules/eigenlayer-middleware/out
            ./abi/eigenlayer-middleware
          key: ${{ runner.os }}-eigenlayer-middleware-build-${{ hashFiles('**/*.sol') }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install cargo binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Install cargo component
        run: cargo binstall cargo-component

      - name: Install wkg
        run: cargo binstall wkg

      - name: Setup wkg
        run: wkg config --default-registry wa.dev

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup dependencies
        run: task setup-ci

      - name: Setup environment
        run: cp .env.example .env

      - name: Run tests and generate report
        id: tests
        run: npm run test:report
        working-directory: tests
        continue-on-error: true

      - name: Check if we should comment
        id: should-comment
        run: |
          SHOULD_COMMENT="false"

          # Always comment if triggered by !test-report comment
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            SHOULD_COMMENT="true"
            echo "Commenting due to !test-report trigger"
          elif [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ github.event.pull_request.draft }}" = "false" ]; then
            # Check if there are test failures
            if [ -f tests/.test-reports/merged-report.json ]; then
              failures=$(node ./.github/scripts/collect-failures.js)
              if [ "$failures" -gt "0" ]; then
                SHOULD_COMMENT="true"
                echo "Commenting due to test failures in non-draft PR"
              else
                echo "No test failures, skipping comment"
              fi
            fi
          else
            echo "Draft PR or push to main, skipping comment"
          fi

          echo "should_comment=$SHOULD_COMMENT" >> $GITHUB_OUTPUT

      - name: Comment with test results
        uses: actions/github-script@v7
        if: steps.should-comment.outputs.should_comment == 'true'
        with:
          script: |
            const { commentTestResults } = require('./.github/scripts/comment-test-results.js');
            await commentTestResults({ github, context });

      - name: Check test results and fail if needed
        if: always()
        run: |
          if [ -f tests/.test-reports/merged-report.json ]; then
            failures=$(node ./.github/scripts/collect-failures.js)
            if [ "$failures" -gt "0" ]; then
              echo "Tests failed: $failures failure(s) found"
              exit 1
            else
              echo "All tests passed"
            fi
          else
            echo "Test report not found, assuming failure"
            exit 1
          fi

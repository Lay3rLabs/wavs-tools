name: Tests triggered
on:
  issue_comment:
    types: [created]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  # tests-triggered:
  #   runs-on: ubuntu-latest
  #   if: ${{ (github.event.issue.pull_request && contains(github.event.comment.body, '/test-results')) || github.event.pull_request }}
  #   permissions:
  #     contents: read
  #     issues: write
  #     pull-requests: write
  #   steps:
  #     - name: Checkout PR branch
  #       uses: actions/checkout@v4
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         ref: ${{ github.event_name == 'issue_comment' && format('refs/pull/{0}/merge', github.event.issue.number) || '' }}

  #     - uses: actions/setup-node@v4
  #       name: Install Node.js
  #       with:
  #         node-version: 21

  #     - name: Install test dependencies
  #       run: npm ci
  #       working-directory: tests

  #     - name: Run tests and generate report
  #       id: tests
  #       run: npm run test:report
  #       working-directory: tests
  #       continue-on-error: true

  #     - name: Comment PR with test results
  #       uses: actions/github-script@v7
  #       if: always()
  #       with:
  #         script: |
  #           const { commentTestResults } = require('./.github/scripts/comment-test-results-manual.js');
  #
  #           // Determine if we should comment based on draft status and trigger
  #           const isDraft = github.event.pull_request?.draft;
  #           const isManualTrigger = github.event_name === 'issue_comment';
  #           const testsFailed = process.env.TESTS_FAILED === 'true';
  #
  #           const shouldComment = isManualTrigger || (isDraft ? false : testsFailed);
  #
  #           if (shouldComment) {
  #             await commentTestResults({ github, context });
  #           } else {
  #             console.log('Skipping comment: PR is in draft mode and tests passed');
  #           }

  #     - name: Set test failure status
  #       if: always()
  #       run: |
  #         if [ -f tests/.test-reports/merged-report.json ]; then
  #           failures=$(node -e "
  #             const fs = require('fs');
  #             const report = JSON.parse(fs.readFileSync('tests/.test-reports/merged-report.json', 'utf8'));
  #             console.log(report.stats.failures || 0);
  #           ")
  #           if [ "$failures" -gt "0" ]; then
  #             echo "TESTS_FAILED=true" >> $GITHUB_ENV
  #             echo "Tests failed: $failures failure(s) found"
  #           else
  #             echo "TESTS_FAILED=false" >> $GITHUB_ENV
  #             echo "All tests passed"
  #           fi
  #         else
  #           echo "TESTS_FAILED=true" >> $GITHUB_ENV
  #           echo "Test report not found, assuming failure"
  #         fi

  #     - name: Check test results and fail if needed
  #       if: always()
  #       run: |
  #         if [ "$TESTS_FAILED" = "true" ]; then
  #           exit 1
  #         fi

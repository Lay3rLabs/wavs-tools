name: Lint

on: [pull_request]

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Git submodules
        id: cache-submodules
        uses: actions/cache@v4
        with:
          path: submodules
          key: ${{ runner.os }}-submodules-${{ hashFiles('.gitmodules') }}

      - name: Checkout submodules
        if: steps.cache-submodules.outputs.cache-hit != 'true'
        run: git submodule update --init --recursive

      - name: Cache Forge build
        id: cache-forge
        uses: actions/cache@v4
        with:
          path: abi
          key: ${{ runner.os }}-forge-${{ hashFiles('.gitmodules', 'bun.lock') }}

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Foundry
        if: steps.cache-forge.outputs.cache-hit != 'true'
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Install Bun
        if: steps.cache-forge.outputs.cache-hit != 'true'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ~/.bun/install/global
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}

      - name: Install Task
        if: steps.cache-forge.outputs.cache-hit != 'true'
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Setup dependencies
        if: steps.cache-forge.outputs.cache-hit != 'true'
        run: task setup-ci

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings

version: "3"

includes:
  bootstrap-common:
    taskfile: ../../../taskfile/common/bootstrap.yml
    flatten: true

tasks:
  build-service:
    desc: "Build operator_updater service configuration"
    deps: [clean-service]
    vars:
      SERVICE_JSON_CMD: 'service --json true --home /wavs-home --file "{{.WAVS_CLI_SERVICE_JSON_PATH}}"'
      TRIGGER_CHAIN: "local"
      SUBMIT_CHAIN: "local"
      COMPONENT_DIGEST:
        sh: task get-component-digest
      SERVICE_MANAGER_ADDRESS:
        sh: task get-service-manager-address
      SUBMISSION_ADDRESS:
        sh: task get-submission-address
    cmds:
      - |
        cd "{{.REPO_ROOT}}"
        mkdir -p {{.SERVICE_OUTPUT_DIR}}

        # Build service configuration using task cli:wavs
        task cli:wavs -- {{.SERVICE_JSON_CMD}} init --name {{.COMPONENT_NAME}}

        WORKFLOW_ID=$(task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow add | jq -r .workflow_id)

        # Configure workflow
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow trigger --id ${WORKFLOW_ID} set-block-interval --chain-name {{.TRIGGER_CHAIN}} --n-blocks {{.BLOCK_INTERVAL}}
          
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id ${WORKFLOW_ID} set-aggregator --url {{.WAVS_AGGREGATOR_ENDPOINT}} --address {{.SUBMISSION_ADDRESS}} --chain-name {{.SUBMIT_CHAIN}}

        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow component --id ${WORKFLOW_ID} set-source-digest --digest {{.COMPONENT_DIGEST}}
          
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow component --id ${WORKFLOW_ID} permissions --http-hosts '*' --file-system true
          
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow component --id ${WORKFLOW_ID} config --values "service_manager_address={{.SERVICE_MANAGER_ADDRESS}}"
          
        task cli:wavs -- {{.SERVICE_JSON_CMD}} manager set-evm --chain-name {{.SUBMIT_CHAIN}} --address {{.SERVICE_MANAGER_ADDRESS}}

        echo "Service configuration built successfully"

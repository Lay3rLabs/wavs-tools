version: "3"

includes:
  bootstrap-common:
    taskfile: ../../../taskfile/common/bootstrap.yml
    flatten: true
  mirror-common:
    taskfile: ../../../taskfile/common/mirror.yml
    flatten: true

tasks:
  build-service:
    desc: "Build service configuration"
    vars:
      SERVICE_JSON_CMD: "{{.SERVICE_JSON_CMD}}"
      SOURCE_CHAIN:
        sh: cd "{{.REPO_ROOT}}" && task backend:get-chain-name-{{.SOURCE_CHAIN_NUMBER}}
      COMPONENT_DIGEST:
        sh: task get-component-digest
      SERVICE_MANAGER_ADDRESS:
        sh: task get-service-manager-address
      STAKE_REGISTRY_ADDRESS:
        sh: task get-stake-registry-address
      AGGREGATOR_COMPONENT_DIGEST:
        sh: task get-component-digest COMPONENT="{{.AGGREGATOR_COMPONENT_NAME}}"
      AGGREGATOR_COMPONENT_CONFIG:
        sh: task bootstrap:get-aggregator-config-values AGGREGATOR_PROJECT="{{.AGGREGATOR_PROJECT}}"
    cmds:
      - task: build-register-workflow
        vars:
          SERVICE_JSON_CMD: "{{.SERVICE_JSON_CMD}}"
          SOURCE_CHAIN: "{{.SOURCE_CHAIN}}"
          STAKE_REGISTRY_ADDRESS: "{{.STAKE_REGISTRY_ADDRESS}}"
          COMPONENT_DIGEST: "{{.COMPONENT_DIGEST}}"
          AGGREGATOR_COMPONENT_DIGEST: "{{.AGGREGATOR_COMPONENT_DIGEST}}"
          AGGREGATOR_COMPONENT_CONFIG: "{{.AGGREGATOR_COMPONENT_CONFIG}}"
      - task: build-deregister-workflow
        vars:
          SERVICE_JSON_CMD: "{{.SERVICE_JSON_CMD}}"
          SOURCE_CHAIN: "{{.SOURCE_CHAIN}}"
          STAKE_REGISTRY_ADDRESS: "{{.STAKE_REGISTRY_ADDRESS}}"
          COMPONENT_DIGEST: "{{.COMPONENT_DIGEST}}"
          AGGREGATOR_COMPONENT_DIGEST: "{{.AGGREGATOR_COMPONENT_DIGEST}}"
          AGGREGATOR_COMPONENT_CONFIG: "{{.AGGREGATOR_COMPONENT_CONFIG}}"
      - task: build-update-workflow
        vars:
          SERVICE_JSON_CMD: "{{.SERVICE_JSON_CMD}}"
          SOURCE_CHAIN: "{{.SOURCE_CHAIN}}"
          STAKE_REGISTRY_ADDRESS: "{{.STAKE_REGISTRY_ADDRESS}}"
          COMPONENT_DIGEST: "{{.COMPONENT_DIGEST}}"
          SERVICE_MANAGER_ADDRESS: "{{.SERVICE_MANAGER_ADDRESS}}"
          AGGREGATOR_COMPONENT_DIGEST: "{{.AGGREGATOR_COMPONENT_DIGEST}}"
          AGGREGATOR_COMPONENT_CONFIG: "{{.AGGREGATOR_COMPONENT_CONFIG}}"

  build-register-workflow:
    desc: "Configure and register a workflow"
    requires:
      vars:
        [
          SERVICE_JSON_CMD,
          SOURCE_CHAIN,
          STAKE_REGISTRY_ADDRESS,
          COMPONENT_DIGEST,
          AGGREGATOR_COMPONENT_DIGEST,
          AGGREGATOR_COMPONENT_CONFIG,
        ]
    vars:
      OPERATOR_REGISTERED_EVENT_HASH:
        sh: cast keccak "OperatorRegistered(address,address)"
      WORKFLOW_ID:
        sh: cd "{{.REPO_ROOT}}" && task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow add --id register | jq -r .workflow_id
    cmds:
      - |
        cd "{{.REPO_ROOT}}"
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow trigger --id {{.WORKFLOW_ID}} set-evm --chain {{.SOURCE_CHAIN}} --address {{.STAKE_REGISTRY_ADDRESS}} --event-hash {{.OPERATOR_REGISTERED_EVENT_HASH}}

        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id {{.WORKFLOW_ID}} set-aggregator --url {{.WAVS_AGGREGATOR_ENDPOINT}}
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id {{.WORKFLOW_ID}} component set-source-digest --digest {{.AGGREGATOR_COMPONENT_DIGEST}}
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id {{.WORKFLOW_ID}} component config {{.AGGREGATOR_COMPONENT_CONFIG}}
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id {{.WORKFLOW_ID}} component permissions --http-hosts '*' --file-system true

        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow component --id {{.WORKFLOW_ID}} set-source-digest --digest {{.COMPONENT_DIGEST}}
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow component --id {{.WORKFLOW_ID}} permissions --http-hosts '*' --file-system true

        echo "Workflow registered"

  build-deregister-workflow:
    desc: "Configure and register a workflow"
    requires:
      vars:
        [
          SERVICE_JSON_CMD,
          SOURCE_CHAIN,
          STAKE_REGISTRY_ADDRESS,
          COMPONENT_DIGEST,
          AGGREGATOR_COMPONENT_DIGEST,
          AGGREGATOR_COMPONENT_CONFIG,
        ]
    vars:
      OPERATOR_DEREGISTERED_EVENT_HASH:
        sh: cast keccak "OperatorDeregistered(address,address)"
      WORKFLOW_ID:
        sh: cd "{{.REPO_ROOT}}" && task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow add --id deregister | jq -r .workflow_id
    cmds:
      - |
        cd "{{.REPO_ROOT}}"
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow trigger --id {{.WORKFLOW_ID}} set-evm --chain {{.SOURCE_CHAIN}} --address {{.STAKE_REGISTRY_ADDRESS}} --event-hash {{.OPERATOR_DEREGISTERED_EVENT_HASH}}

        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id {{.WORKFLOW_ID}} set-aggregator --url {{.WAVS_AGGREGATOR_ENDPOINT}}
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id {{.WORKFLOW_ID}} component set-source-digest --digest {{.AGGREGATOR_COMPONENT_DIGEST}}
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id {{.WORKFLOW_ID}} component config {{.AGGREGATOR_COMPONENT_CONFIG}}
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id {{.WORKFLOW_ID}} component permissions --http-hosts '*' --file-system true

        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow component --id {{.WORKFLOW_ID}} set-source-digest --digest {{.COMPONENT_DIGEST}}
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow component --id {{.WORKFLOW_ID}} permissions --http-hosts '*' --file-system true

        echo "Workflow registered"

  build-update-workflow:
    desc: "Configure and register a workflow"
    requires:
      vars:
        [
          SERVICE_JSON_CMD,
          SOURCE_CHAIN,
          STAKE_REGISTRY_ADDRESS,
          COMPONENT_DIGEST,
          SERVICE_MANAGER_ADDRESS,
          AGGREGATOR_COMPONENT_DIGEST,
          AGGREGATOR_COMPONENT_CONFIG,
        ]
    vars:
      WORKFLOW_ID:
        sh: cd "{{.REPO_ROOT}}" && task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow add --id update | jq -r .workflow_id
    cmds:
      - |
        cd "{{.REPO_ROOT}}"
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow trigger --id {{.WORKFLOW_ID}} set-block-interval --chain {{.SOURCE_CHAIN}} --n-blocks {{.UPDATE_INTERVAL_BLOCKS}}

        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id {{.WORKFLOW_ID}} set-aggregator --url {{.WAVS_AGGREGATOR_ENDPOINT}}
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id {{.WORKFLOW_ID}} component set-source-digest --digest {{.AGGREGATOR_COMPONENT_DIGEST}}
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id {{.WORKFLOW_ID}} component config {{.AGGREGATOR_COMPONENT_CONFIG}}
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow submit --id {{.WORKFLOW_ID}} component permissions --http-hosts '*' --file-system true

        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow component --id {{.WORKFLOW_ID}} set-source-digest --digest {{.COMPONENT_DIGEST}}
        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow component --id {{.WORKFLOW_ID}} permissions --http-hosts '*' --file-system true

        task cli:wavs -- {{.SERVICE_JSON_CMD}} workflow component --id {{.WORKFLOW_ID}} config --values "service_manager_address={{.SERVICE_MANAGER_ADDRESS}}"

        echo "Workflow registered"

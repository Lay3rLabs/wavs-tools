version: "3"

vars:
  COMPONENTS_DIR: "./components"
  RPC_URL: "127.0.0.1:8545"
  WAVS_DOCKER_IMAGE: "ghcr.io/lay3rlabs/wavs:0.4.0-rc"
  MIDDLEWARE_DOCKER_IMAGE: "ghcr.io/lay3rlabs/wavs-middleware:0.4.0-rc"
  DOCKER_SUDO:
    sh: |
      if groups | grep -q docker; then echo ""; else echo "sudo"; fi

includes:
  avs_sync: ./avs_sync/Taskfile.yml

tasks:
  up:
    desc: Start all services with Docker Compose
    cmds:
      - task clean-docker
      - task setup-env
      - docker compose up -d

  down:
    desc: Stop and remove all services
    cmds:
      - docker compose down

  restart:
    desc: Restart all services
    deps: [down]
    cmds:
      - task: up

  clean-docker:
    desc: "Remove unused docker containers"
    cmds:
      - |
        {{.DOCKER_SUDO}} docker rm -v $(shell {{.DOCKER_SUDO}} docker ps -a --filter status=exited -q) > /dev/null 2>&1 || true

  setup-env:
    desc: "Create the .env file from .env.example if not yet created"
    cmds:
      - |
        [ -f .env ] || cp .env.example .env

  wavs-middleware:
    desc: Run any wavs middleware command
    cmds:
      - >
        {{.DOCKER_SUDO}} docker run --rm --network host
        --env-file .env
        {{if .WAVS_SERVICE_MANAGER_ADDRESS}}-e WAVS_SERVICE_MANAGER_ADDRESS={{.WAVS_SERVICE_MANAGER_ADDRESS}}{{end}}
        {{if .PAST_BLOCKS}}-e PAST_BLOCKS={{.PAST_BLOCKS}}{{end}}
        -v ./.nodes:/root/.nodes
        {{.MIDDLEWARE_DOCKER_IMAGE}} {{.CLI_ARGS}}

  wavs-cli:
    desc: Run any wavs cli command
    cmds:
      - >
        {{.DOCKER_SUDO}} docker run --rm --network host
        --env-file .env -v {{.PWD}}:/data {{.WAVS_DOCKER_IMAGE}}
        wavs-cli {{.CLI_ARGS}}
